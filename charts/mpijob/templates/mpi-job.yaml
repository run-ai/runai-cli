{{- include "runai-common.pvc" . }}

---

apiVersion: kubeflow.org/v1alpha2
kind: MPIJob
metadata:
  name: {{ .Release.Name }}
  annotations:
    image: "{{ .Values.image }}"
    totalGPUs: "{{ .Values.totalGpus }}"
  labels:
    app: {{ template "mpijob.name" . }}
    chart: {{ template "mpijob.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
    createdBy: "MPIJob"
    project: {{ .Values.project }}
    {{- if .Values.user }}
    user: {{ .Values.user | quote}}
    {{- end }}
    {{- if .Values.interactive }}
    priorityClassName: "build"
    {{- end}}
    {{- if .Values.labels }}
    {{- range $key, $val := .Values.labels }}
    {{ $key }}: {{ $val | quote }}
    {{- end }}
    {{- end}}
spec:
  backoffLimit: {{ .Values.backoffLimit }}
  {{- if .Values.node_type }}
  nodeSelector:
    run.ai/type: {{ .Values.node_type }}
  {{- end}}
  slotsPerWorker: 1
  cleanPodPolicy: Running
  mpiReplicaSpecs:
    Launcher:
      replicas: 1
      template:
        metadata:
          labels:
            project: {{ .Values.project }}
            {{- if .Values.user }}
            user: {{ .Values.user | quote}}
            {{- end }}
          annotations:
            totalGPUs: "{{ .Values.totalGpus }}"
        spec:
          {{- if .Values.node_type }}
          nodeSelector:
            run.ai/type: {{ .Values.node_type }}
          {{- end}}
          hostIPC: {{ .Values.hostIPC }}
          hostNetwork: {{ .Values.hostNetwork }}
          securityContext:
            {{- if .Values.runAsUser }}
            runAsUser: {{ .Values.runAsUser }}
            {{- end}}
            {{- if .Values.runAsGroup }}
            runAsGroup: {{ .Values.runAsGroup }}
            fsGroup: {{ .Values.runAsGroup }}
            {{- end }}
            {{- if .Values.supplementalGroups }}
            supplementalGroups:
{{ toYaml .Values.supplementalGroups | indent 14}}
            {{- end }}
          schedulerName: runai-scheduler
          {{- if  .Values.createHomeDir }}
          volumes:
            - name: user-data
              emptyDir: {}
          {{- end }}
          containers:
            - image: "{{ .Values.image }}"
              stdin: {{ .Values.stdin }}
              tty: {{ .Values.tty }}
              name: mpi
              {{- if  .Values.createHomeDir }}
              volumeMounts:
                - mountPath: /home/runai-home
                  name: user-data
              {{- end }}
              securityContext:
                allowPrivilegeEscalation: {{ not .Values.preventPrivilegeEscalation }}
              imagePullPolicy: {{ .Values.imagePullPolicy }}
              {{- if .Values.workingDir }}
              workingDir: {{ .Values.workingDir }}
              {{- end}}
              command:
              {{ range $index, $command := .Values.command }}
              - {{ quote $command }}
              {{- end}}
              args:
              {{ range $index, $arg := .Values.args }}
              - {{ quote $arg }}
              {{- end}}
              {{- if .Values.workingDir }}
              workingDir: {{ .Values.workingDir }}
              {{- end}}
              resources:
                requests:
                  {{- if .Values.cpu}}
                  cpu: {{ .Values.cpu }}
                  {{- end}}
                  {{- if .Values.memory}}
                  memory: {{ .Values.memory }}
                  {{- end }}
              env:
                {{- if .Values.createHomeDir }}
                - name: "HOME"
                  value: /home/runai-home
                {{- end }}
                # Not using concat to support previous version of helm
                {{- range $index, $env := .Values.environmentDefault }}
                {{ $parts := split "=" $env }}
                - name: {{ quote $parts._0 }}
                  value: {{ quote $parts._1}}
                {{- end }}
                {{- range $index, $env := .Values.environment }}
                {{ $parts := split "=" $env }}
                - name: {{ quote $parts._0 }}
                  value: {{ quote $parts._1}}
                {{- end }}
                - name: RUNAI_MPI_NUM_WORKERS
                  value: "{{ .Values.numProcesses }}"
              {{- include "runai-common.job.ports" . | indent 14 }}
              {{- include "runai-common.job.volume.mounts" . | indent 14 }}
            {{- include "runai-common.job.volumes" . | indent 10 }}
    Worker:
      replicas: {{ .Values.numProcesses }}
      template:
        metadata:
          annotations:
            {{- if .Values.gpuFraction }}
            gpu-fraction: "{{ .Values.gpuFraction }}"
            {{- end }}
          labels:
            project: {{ .Values.project }}
            {{- if .Values.user }}
            user: {{ .Values.user | quote}}
            {{- end }}
        spec:
          {{- if .Values.node_type }}
          nodeSelector:
            run.ai/type: {{ .Values.node_type }}
          {{- end}}
          schedulerName: runai-scheduler
          {{- if  .Values.createHomeDir }}
          volumes:
            - name: user-data
              emptyDir: {}
          {{- end }}
          securityContext:
            {{- if .Values.runAsUser }}
            runAsUser: {{ .Values.runAsUser }}
            {{- end}}
            {{- if .Values.runAsGroup }}
            runAsGroup: {{ .Values.runAsGroup }}
            {{- end }}
            {{- if .Values.supplementalGroups }}
            supplementalGroups:
{{ toYaml .Values.supplementalGroups | indent 14}}
            {{- end }}
          containers:
            - image: "{{ .Values.image }}"
              stdin: {{ .Values.stdin }}
              tty: {{ .Values.tty }}
              {{- if .Values.createHomeDir }}
              volumeMounts:
                - mountPath: /home/runai-home
                  name: user-data
              {{- end }}
              securityContext:
                allowPrivilegeEscalation: {{ not .Values.preventPrivilegeEscalation }}
              name: mpi
              imagePullPolicy: {{ .Values.imagePullPolicy }}
              resources:
                limits:
                  {{- if .Values.gpuInt }}
                  nvidia.com/gpu: {{ .Values.gpuInt }}
                  {{- end}}
                requests:
                  {{- if .Values.cpu}}
                  cpu: {{ .Values.cpu }}
                  {{- end}}
                  {{- if .Values.memory}}
                  memory: {{ .Values.memory }}
                  {{- end }}
              env:
                {{- if .Values.createHomeDir }}
                - name: "HOME"
                  value: /home/runai-home
                {{- end }}
                # Not using concat to support previous version of helm
                {{- range $index, $env := .Values.environmentDefault }}
                {{ $parts := split "=" $env }}
                - name: {{ quote $parts._0 }}
                  value: {{ quote $parts._1}}
                {{- end }}
                {{- range $index, $env := .Values.environment }}
                {{ $parts := split "=" $env }}
                - name: {{ quote $parts._0 }}
                  value: {{ quote $parts._1}}
                {{- end }}
