{{- if .Values.interactive }}
apiVersion: apps/v1
kind: "StatefulSet"
{{- else }}
apiVersion: batch/v1
kind: "Job"
{{- end }}

# Not using concat to support previous version of helm
{{- $combinedVolume := list }}
{{- range $volume := (.Values.volume | default list) }}
{{- $combinedVolume = append $combinedVolume $volume }}
{{- end}}
{{- range $volume := (.Values.volumeDefault | default list) }}
{{- $combinedVolume = append $combinedVolume $volume }}
{{- end}}
# Not using concat to support previous version of helm
{{- $combinedPorts := list }}
{{- range $port := (.Values.ports | default list) }}
{{- $combinedPorts = append $combinedPorts $port }}
{{- end}}
{{- range $port := (.Values.portsDefault | default list) }}
{{- $combinedPorts = append $combinedPorts $port }}
{{- end}}

metadata:
  name: {{ .Release.Name }}
  labels:
  {{- include "charts.label-addition" . | indent 4 }}
    {{- if and .Values.interactive .Values.isPreemptible }}
    priorityClassName: "interactive-preemptible"
    {{- end}}
  {{- if .Values.labels }}
    {{- range $key, $val := .Values.labels }}
    {{ $key }}: {{ $val | quote }}
    {{- end }}
  {{- end}}
spec:
  {{- if .Values.interactive }}
  serviceName: {{ .Release.Name }}
  replicas: 1
  selector:
    matchLabels:
      release: {{ .Release.Name }}
  {{- else }}
    {{- if or .Values.ttlSecondsAfterFinished (eq (quote .Values.ttlSecondsAfterFinished) (quote 0))}}
  ttlSecondsAfterFinished: {{ .Values.ttlSecondsAfterFinished }}
    {{- end }}
    {{- if .Values.parallelism }}
  parallelism: {{ .Values.parallelism }}
    {{- end }}
    {{- if .Values.completions }}
  completions: {{ .Values.completions }}
    {{- end }}
    {{- if .Values.backoffLimit }}
  backoffLimit: {{ .Values.backoffLimit }}
    {{- end }}
  {{- end }}
  template:
    metadata:
      annotations:
        {{- if .Values.gpuFraction }}
        gpu-fraction: "{{ .Values.gpuFraction }}"
        {{- end }}
        {{- if .Values.elastic }}
        elastic: {{ .Values.elastic | quote }}
        {{- end }}
      labels:
        {{- include "charts.label-addition" . | indent 8}}
        {{- if .Values.user }}
        user: {{ .Values.user }}
        {{- end }}
    spec:
      {{- if .Values.node_type }}
      nodeSelector:
        run.ai/type: {{ .Values.node_type }}
      {{- end}}
      schedulerName: runai-scheduler
      {{- if eq .Values.interactive false}}
      restartPolicy: Never
      {{- end}}
      hostIPC: {{ .Values.hostIPC }}
      hostNetwork: {{ .Values.hostNetwork }}
      securityContext:
        {{- if .Values.runAsUser }}
        runAsUser: {{ .Values.runAsUser }}
        {{- end}}
        {{- if .Values.runAsGroup }}
        runAsGroup: {{ .Values.runAsGroup }}
        {{- end }}
      containers:
        - name: {{ .Release.Name }}
          command:
          {{ range $index, $command := .Values.command }}
          - {{ quote $command }}
          {{- end}}
          args: 
          {{ range $index, $arg := .Values.args }}
          - {{ quote $arg }}
          {{- end}}
          image: {{ .Values.image }}
          {{- if .Values.localImage}}
          imagePullPolicy: Never
          {{- else if .Values.alwaysPullImage }}
          imagePullPolicy: Always
          {{- end }}
          {{- if .Values.workingDir }}
          workingDir: {{ .Values.workingDir }}
          {{- end}}
          resources:
            limits:
              {{- if .Values.gpuInt }}
              nvidia.com/gpu: {{ .Values.gpuInt }}
              {{- end}}
              {{- if .Values.cpuLimit}}
              cpu: {{ .Values.cpuLimit }}
              {{- end}}
              {{- if .Values.memoryLimit}}
              memory: {{ .Values.memoryLimit }}
              {{- end }}
            requests:
              {{- if .Values.cpu}}
              cpu: {{ .Values.cpu }}
              {{- end}}
              {{- if .Values.memory}}
              memory: {{ .Values.memory }}
              {{- end }}
          volumeMounts:
            {{- range $index, $volume := $combinedVolume}}
            {{ $parts := split ":" $volume }}
            - mountPath: {{ $parts._1 }}
              name: "volume-{{ $index }}"
            {{- if eq $parts._2 "ro" }}
              readOnly: true
            {{- end}}
            {{- end }}
            {{- if .Values.shm }}
            - mountPath: /dev/shm
              name: dshm
            {{- end }}
          ports:
            {{- range $port := $combinedPorts}}
            # float will be the type when it's not quoted
              {{- if kindIs "float64" $port }}
            - protocol: 'TCP'
              containerPort: {{$port}}
              {{- else }}
            {{ $parts := split ":" $port }}
            - protocol: 'TCP'
              containerPort: {{ $parts._1 | default $parts._0 }}
              {{- end}}
            {{- end}}
          env:
            # Not using concat to support previous version of helm
            {{- range $index, $env := .Values.environmentDefault }}
            {{ $parts := split "=" $env }}
            - name: {{ quote $parts._0 }}
              value: {{ quote $parts._1}}
            {{- end }}
            {{- range $index, $env := .Values.environment }}
            {{ $parts := split "=" $env }}
            - name: {{ quote $parts._0 }}
              value: {{ quote $parts._1}}
            {{- end }}  
      volumes:
        {{- range $index, $volume := $combinedVolume}}
        {{ $parts := split ":" $volume }}
          - name: "volume-{{ $index }}"
            hostPath:
              path: {{ $parts._0 }}
              type: Directory
        {{- end }}
        {{- if .Values.shm }}
          - name: dshm
            emptyDir:
              medium: Memory
        {{- end }}
