{{- if and .Values.serviceType }}

{{- $combinedPorts := list }}
{{- range $port := (.Values.ports | default list) }}
{{- $combinedPorts = append $combinedPorts $port }}
{{- end}}
{{- range $port := (.Values.portsDefault | default list) }}
{{- $combinedPorts = append $combinedPorts $port }}
{{- end}}

{{- if not $combinedPorts }}
  {{ fail "Ports must be provided when exposing a service."}}
{{- end }}
apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name }}
  {{- include "chart.labels" . | indent 2}}
spec:
  {{- if eq .Values.serviceType "nodeport" }}
  type: 'NodePort'
  {{- else if eq .Values.serviceType "loadbalancer" }}
  type: 'LoadBalancer'
  {{- else}}
  type: 'ClusterIP'
  {{- end}}
  selector: 
    release: {{ .Release.Name }}
  ports:
    {{- range $index, $port := $combinedPorts }}
    # float will be the type when it's not quoted
      {{- if kindIs "float64" $port }}
    - name: "{{ $port }}-port"
      protocol: 'TCP'
      port: {{ $port }}
      targetPort: {{ $port }}
      {{ if eq $.Values.serviceType "nodeport" }}
      nodePort: {{ $port }}
      {{ end }}
      {{- else }}
    {{ $parts := split ":" $port }}
    {{ $targetPort := $parts._1 | default $parts._0}}
    - name: "{{ $targetPort }}-port"
      protocol: 'TCP'
      port: {{ $parts._0 }}
      targetPort: {{ $targetPort }}
      {{ if and (eq $.Values.serviceType "nodeport") (eq (len $parts) 2) }}
      nodePort: {{ $parts._0 }}
      {{ end }}
      {{- end}}
    {{- end}}
{{- end}}
