
executors:
  runai-executor:
    docker:
      - image: runai/circleci-go-gcloud
    working_directory: /go/src/github.com/kubeflow/arena

version: 2.1
jobs:
  test:
    executor: runai-executor
    steps:
    - checkout
    - run:
        name: run test
        command: |
          ./test.sh
  build:
    executor: runai-executor
    steps:
    - checkout
    - run: mkdir -p workspace/binaries
    - run:
        name: general-prep
        command: rm .env
    - run:
        name: pack runai-common chart
        command: |
          helm dep update charts/runai --skip-refresh
          helm dep update charts/mpijob --skip-refresh
    - run:
        name: build-mac
        command: |
          make cli-darwin-amd64
          tar --transform "s,bin/runai,runai," -czvf darwin-amd64.tar.gz bin/runai install-runai.sh charts VERSION
          mv darwin-amd64.tar.gz workspace/binaries
    - run: 
        name: build-linux
        command: |
          make cli-linux-amd64
          tar --transform "s,bin/runai,runai," -czvf linux-amd64.tar.gz bin/runai install-runai.sh charts VERSION
          mv linux-amd64.tar.gz workspace/binaries
    - persist_to_workspace:
        root: workspace
        paths:
          - binaries
    - store_artifacts:
        path: workspace/binaries

  push:
    executor: runai-executor
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - checkout
      - run:
          name: push
          command: |
            set -ex 
            echo $GCP_SERVICE_ACCOUNT >> ./key_file
            gcloud auth activate-service-account staging-ci@run-ai-staging.iam.gserviceaccount.com --key-file ./key_file
            gsutil cp /tmp/workspace/binaries/darwin-amd64.tar.gz gs://cli-artifacts/<<pipeline.git.revision>>/darwin-amd64.tar.gz
            gsutil cp /tmp/workspace/binaries/linux-amd64.tar.gz gs://cli-artifacts/<<pipeline.git.revision>>/linux-amd64.tar.gz
            # Update latest version for branch
            echo <<pipeline.git.revision>> > ./latest
            gsutil cp ./latest gs://cli-artifacts/branch-versions/<<pipeline.git.branch>>
  release:
    executor: runai-executor
    steps:
      - checkout
      - run:
          name: get-packages
          command: |
            set -ex
            mkdir -p /tmp/packages
            echo $GCP_SERVICE_ACCOUNT >> ./key_file
            gcloud auth activate-service-account staging-ci@run-ai-staging.iam.gserviceaccount.com --key-file ./key_file
            gsutil cp gs://cli-artifacts/<<pipeline.git.revision>>/darwin-amd64.tar.gz /tmp/packages/darwin-amd64.tar.gz
            gsutil cp gs://cli-artifacts/<<pipeline.git.revision>>/linux-amd64.tar.gz /tmp/packages/linux-amd64.tar.gz
      - run:
          name: update-version
          command: |
            set -ex
            mkdir darwin
            mkdir linux
            tar -C darwin -zxvf /tmp/packages/darwin-amd64.tar.gz
            tar -C linux -zxvf /tmp/packages/linux-amd64.tar.gz
            echo <<pipeline.git.tag>> > darwin/VERSION
            echo <<pipeline.git.tag>> > linux/VERSION
            cd darwin
            tar -czvf darwin-amd64.tar.gz runai install-runai.sh charts VERSION
            cd ../linux
            tar -czvf linux-amd64.tar.gz runai install-runai.sh charts VERSION
            cd ../
      - run:
          name: upload-version
          command: |
            hub release edit -a darwin/darwin-amd64.tar.gz#darwin-amd64.tar.gz -a linux/linux-amd64.tar.gz#linux-amd64.tar.gz -m "" <<pipeline.git.tag>>


workflows:
  version: 2.1

  staging:
    jobs:
      - build: 
          name: build
      - test:
          name: test
      - push:
          name: push
          requires:
            - build
            - test
          filters:
            branches:
              only:
               - master
               # regular expression to match for version branches. any branch that represents a version: v1.0.0, v1.0.0-rc, v1.x.x, .etc
               - /v.+?\..+?\..+/
            tags:
              ignore: /.*/
  release:
    jobs:
      - release:
          name: release
          filters:
            branches:
              ignore: /.*/  
            tags:
              only: /^v.*/
